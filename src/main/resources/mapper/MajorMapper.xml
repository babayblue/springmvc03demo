<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.dao.MajorMapper">
    <resultMap id="BaseResultMap" type="com.company.entity.Major">
        <constructor>
            <idArg column="m_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="m_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="c_redit" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="lifeyear" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="introduction" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="c_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    m_id, m_name, c_redit, lifeyear, introduction, c_id
  </sql>
    <select id="selectByExample" parameterType="com.company.entity.MajorExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from major
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        order by c_redit
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from major
        where m_id = #{mId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from major
    where m_id = #{mId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.company.entity.MajorExample">
        delete from major
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.company.entity.Major">
    insert into major (m_id, m_name, c_redit, 
      lifeyear, introduction, c_id
      )
    values (#{mId,jdbcType=INTEGER}, #{mName,jdbcType=VARCHAR}, #{cRedit,jdbcType=INTEGER}, 
      #{lifeyear,jdbcType=INTEGER}, #{introduction,jdbcType=VARCHAR}, #{cId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.company.entity.Major">
        insert into major
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="mId != null">
                m_id,
            </if>
            <if test="mName != null">
                m_name,
            </if>
            <if test="cRedit != null">
                c_redit,
            </if>
            <if test="lifeyear != null">
                lifeyear,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="cId != null">
                c_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mId != null">
                #{mId,jdbcType=INTEGER},
            </if>
            <if test="mName != null">
                #{mName,jdbcType=VARCHAR},
            </if>
            <if test="cRedit != null">
                #{cRedit,jdbcType=INTEGER},
            </if>
            <if test="lifeyear != null">
                #{lifeyear,jdbcType=INTEGER},
            </if>
            <if test="introduction != null">
                #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="cId != null">
                #{cId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.company.entity.MajorExample" resultType="java.lang.Long">
        select count(*) from major
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update major
        <set>
            <if test="record.mId != null">
                m_id = #{record.mId,jdbcType=INTEGER},
            </if>
            <if test="record.mName != null">
                m_name = #{record.mName,jdbcType=VARCHAR},
            </if>
            <if test="record.cRedit != null">
                c_redit = #{record.cRedit,jdbcType=INTEGER},
            </if>
            <if test="record.lifeyear != null">
                lifeyear = #{record.lifeyear,jdbcType=INTEGER},
            </if>
            <if test="record.introduction != null">
                introduction = #{record.introduction,jdbcType=VARCHAR},
            </if>
            <if test="record.cId != null">
                c_id = #{record.cId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update major
        set m_id = #{record.mId,jdbcType=INTEGER},
        m_name = #{record.mName,jdbcType=VARCHAR},
        c_redit = #{record.cRedit,jdbcType=INTEGER},
        lifeyear = #{record.lifeyear,jdbcType=INTEGER},
        introduction = #{record.introduction,jdbcType=VARCHAR},
        c_id = #{record.cId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.company.entity.Major">
        update major
        <set>
            <if test="mName != null">
                m_name = #{mName,jdbcType=VARCHAR},
            </if>
            <if test="cRedit != null">
                c_redit = #{cRedit,jdbcType=INTEGER},
            </if>
            <if test="lifeyear != null">
                lifeyear = #{lifeyear,jdbcType=INTEGER},
            </if>
            <if test="introduction != null">
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="cId != null">
                c_id = #{cId,jdbcType=INTEGER},
            </if>
        </set>
        where m_id = #{mId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.company.entity.Major">
    update major
    set m_name = #{mName,jdbcType=VARCHAR},
      c_redit = #{cRedit,jdbcType=INTEGER},
      lifeyear = #{lifeyear,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=VARCHAR},
      c_id = #{cId,jdbcType=INTEGER}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
</mapper>